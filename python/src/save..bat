@echo off

if not exist "..\photo\" mkdir "..\photo"

powershell.exe -NoProfile -ExecutionPolicy Bypass -Command "Add-Type -AssemblyName System.Windows.Forms; Add-Type -AssemblyName System.Drawing; Add-Type -TypeDefinition 'using System; using System.Runtime.InteropServices; public class NativeMethods { [DllImport(\"user32.dll\")] public static extern bool GetWindowRect(IntPtr hWnd, out RECT lpRect); [StructLayout(LayoutKind.Sequential)] public struct RECT { public int Left; public int Top; public int Right; public int Bottom; } }'; $windowTitle = 'Figure 1'; $process = Get-Process | Where-Object { $_.MainWindowTitle -eq $windowTitle }; if ($process) { $hwnd = $process.MainWindowHandle; $rect = New-Object NativeMethods+RECT; [void][NativeMethods]::GetWindowRect($hwnd, [ref]$rect); $width = $rect.Right - $rect.Left; $height = $rect.Bottom - $rect.Top; if ($width -gt 0 -and $height -gt 0) { $bitmap = New-Object System.Drawing.Bitmap($width, $height); $graphics = [System.Drawing.Graphics]::FromImage($bitmap); $graphics.CopyFromScreen($rect.Left, $rect.Top, 0, 0, $bitmap.Size); $savePath = (Join-Path (Get-Item '..\photo').FullName 'graph.png'); $bitmap.Save($savePath, [System.Drawing.Imaging.ImageFormat]::Png); $bitmap.Dispose(); $graphics.Dispose(); Write-Output ('截图成功保存至：{0}' -f $savePath); } else { Write-Output '获取的窗口尺寸无效'; } } else { Write-Output '未找到窗口 \"Figure 1\"'; }"
